/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: dammne (https://sketchfab.com/dammne)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/retro-videogame-controller-snes-f4bbdeb9072a42cc8652cff4e14e2e0e
title: Retro Videogame Controller - SNES
*/

import * as THREE from "three";
import { useState } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export default function GameController(
    { mesh }: any,
    props: JSX.IntrinsicElements["group"]
) {
    const { nodes, materials } = useGLTF(
        "/models/controller/scene.gltf"
    ) as any;
    const [hovered, setHovered] = useState(false);

    useFrame(() => {
        if (!mesh.current) return;
        mesh.current.scale.x = THREE.MathUtils.lerp(
            mesh.current.scale.x,
            hovered ? 0.0023 : 0.002,
            0.1
        );
        mesh.current.scale.y = THREE.MathUtils.lerp(
            mesh.current.scale.y,
            hovered ? 0.0023 : 0.002,
            0.1
        );
        mesh.current.scale.z = THREE.MathUtils.lerp(
            mesh.current.scale.z,
            hovered ? 0.0023 : 0.002,
            0.1
        );
    });

    return (
        <group
            ref={mesh}
            {...props}
            dispose={null}
            scale={[0.0005, 0.0005, 0.0005]}
            onPointerOver={() => setHovered(true)}
            onPointerOut={() => setHovered(false)}
        >
            <group rotation={[-Math.PI / 5, 0, 0]}>
                <mesh
                    geometry={nodes.mesh_0.geometry}
                    material={materials.Control}
                />
                <mesh
                    geometry={nodes.mesh_1.geometry}
                    material={materials.Control_Volumen}
                />
                <mesh
                    geometry={nodes.mesh_2.geometry}
                    material={materials.material_4}
                />
                <mesh
                    geometry={nodes.mesh_3.geometry}
                    material={materials["Mat.1"]}
                />
                <mesh
                    geometry={nodes.mesh_4.geometry}
                    material={materials["Mat.2"]}
                />
                <mesh
                    geometry={nodes.mesh_5.geometry}
                    material={materials["Mat.3"]}
                />
                <mesh
                    geometry={nodes.mesh_6.geometry}
                    material={materials.BOTONES}
                />
                <mesh
                    geometry={nodes.mesh_7.geometry}
                    material={materials.material}
                />
                <mesh
                    geometry={nodes.mesh_8.geometry}
                    material={materials.PAD_A}
                />
            </group>
        </group>
    );
}

useGLTF.preload("/models/controller/scene.gltf");
